<?xml version="1.0" encoding="UTF-8"?>
<OAI-PMH xmlns="http://www.openarchives.org/OAI/2.0/"
         xmlns:mods="http://www.loc.gov/mods/v3"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/
         http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd">
    <responseDate><%= @response_date %></responseDate>
    <request verb="<%= @verb %>" metadataPrefix="<%= @metadata_prefix %>">http://bostonlocaltv.org/oai.xml</request>
    <ListRecords>
        <% @records.each do |record| %>
            <record>
                <header>
                    <identifier><%= record.id %></identifier>
                    <datestamp><%= record.date %></datestamp>
                </header>
                <metadata>
                    <%=
                    Nokogiri::XML::Builder.new do |x|
                      x.mods(xmlns: 'http://www.loc.gov/mods/v3') {
                        x.identifier('http://bostonlocaltv.org/catalog/' + record.id, type: 'uri')
                        record.title.each do |title|
                          x.titleInfo(usage: 'primary') {
                            x.title(title)
                          }
                        end if record.title
                        # TODO: Need to update Solr schema to store contributor name and role separately in order to map here
                        #x.name('PERSON NAME') {
                          #x.role {
                            #x.roleTerm('PERSON ROLE')
                          #}
                        #}
                        x.typeOfResource('moving image') if record.video
                        #x.physicalDescription('DESC')
                        # hardcoding News value here because all records in this app are News stories
                        x.genre('News')
                        x.originInfo {
                          x.publisher(record.collection)
                          x.dateCreated(record.date_created) if record.date_created
                          x.dateIssued(record.date_broadcast) if record.date_broadcast
                        }
                        x.physicalDescription {
                          x.extent(record.duration)
                        } if record.audio_duration
                        record.descriptions.each do |description|
                          x.abstract(description)
                        end if record.descriptions
                        record.subjects.each do |subject|
                          x.subject {
                            x.topic(subject)
                          }
                        end if record.subjects
                        record.names.each do |name|
                          x.subject {
                            x.topic(name)
                          }
                        end if record.names
                        record.locations.each do |location|
                          x.subject {
                            x.geographic(location)
                          }
                        end if record.locations
                        #x.relatedItem(type: 'host') {
                          #x.titleInfo {
                            #x.title('Boston Local TV News')
                          #}
                        #}
                        #x.location {
                          #x.physicalLocation('LOCATION')
                        #}
                        x.accessCondition('Contact host institution for more information.', type: 'use and reproduction')
                      }
                    end.to_xml.sub('<?xml version="1.0"?>','').html_safe
                    %>
                </metadata>
            </record>
        <% end %>
        <% if @next_resumption_token %>
            <resumptionToken><%= @next_resumption_token %></resumptionToken>
        <% end %>
    </ListRecords>
</OAI-PMH>
